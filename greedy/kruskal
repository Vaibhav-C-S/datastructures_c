def find(graph,node):
    if graph[node] < 0:
        return node
    else:
        temp = find(graph,graph[node])
        graph[node] = temp
        return temp



def union(graph,a,b,answer):
    a = find(graph,a)
    b = find(graph,b)
    if a == b:
        pass
    else:
        answer.append([a,b])
        if graph[a] < graph[b]:
            graph[a] =graph[a] + graph[b]
            graph[b] = a 
        else:   
            graph[b] =graph[a] + graph[b]
            graph[a] = b 



ipt = [[1,2,1],[1,3,3],[2,6,4],[3,6,2],[3,4,1],[4,5,5],[6,7,2],[6,5,6],[7,5,7]]
n=7
ipt.sort(key = lambda x:x[1])
answer=[]
graph = [-1] *(n+1)
for u,v,d in ipt:
    union(graph,u,v,answer)
for item in answer:
    print(item)

